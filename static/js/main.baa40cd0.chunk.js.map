{"version":3,"sources":["components/preview/ImagePreview.js","components/Student.js","components/Home.js","components/SingleStudent.js","App.js","serviceWorker.js","index.js"],"names":["ImagePreview","dataUri","isFullscreen","content","classNameFullscreen","console","log","className","src","width","alt","height","style","border","padding","Student","state","photos","addImage","e","newItem","id","Math","floor","random","img","localStorage","getItem","pics","setState","this","setItem","JSON","stringify","studentSection","marginTop","type","onClick","showAllImage","length","map","el","key","to","Component","Image","props","_removeDeviceImageDiv","document","querySelector","display","file","imagePreviewUrl","deviceImageContent","_handleImageChange","bind","_handleSubmit","_handleChange","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","value","$imagePreview","onChange","onSubmit","textAlign","Camera1","useState","setDataUri","setContent","onTakePhotoAnimationDone","Home","flagCamera","flagPhone","studentFlag","handleCamera","getElementById","handlePhotoDevice","classList","add","handleStudentClick","show","show1","student","fontSize","marginBottom","Single","number","handleChange","handleAddButton","img1","getAttribute","Number","match","params","imageUrl","parse","filter","showmarks","color","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.baa40cd0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './imagePreview.css';\r\n\r\nexport const ImagePreview = ({ dataUri, isFullscreen,content }) => {\r\n  let classNameFullscreen = isFullscreen ? 'demo-image-preview-fullscreen' : '';\r\n  console.log(content)\r\n  return (\r\n    <div className={'demo-image-preview ' + classNameFullscreen}>\r\n     <div className='' >\r\n               <img src={dataUri} width='500' alt='' height='400' style={{ border:\"2px solid blue\",padding:\".5rem 1rem\"}} />\r\n        \r\n     </div>\r\n     <h2>About Your Image</h2>\r\n     <h3> { content }</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nImagePreview.propTypes = {\r\n  dataUri: PropTypes.string,\r\n  isFullscreen: PropTypes.bool\r\n};\r\n\r\nexport default ImagePreview;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nclass Student extends Component {\r\n    state={\r\n        photos:[]\r\n    }\r\n    addImage=(e)=>{\r\n         const newItem={\r\n             id:Math.floor(Math.random()*100),\r\n             img:localStorage.getItem('img')\r\n         }\r\n         let pics=[...this.state.photos,newItem]\r\n         this.setState({\r\n             photos:pics\r\n         })\r\n       \r\n        // this.state.photos.push('gfadsf')\r\n        // console.log('dfsd')\r\n    }\r\n    render() {\r\n        console.log(this.state.photos)\r\n        const img=localStorage.getItem('img');\r\n        localStorage.setItem('photos',JSON.stringify(this.state.photos))\r\n        const studentSection=(img)?(          \r\n            <div style={{marginTop:\"2rem\"}}>\r\n                  <button type='button' className='btn btn-primary' onClick={ this.addImage }>Edit</button>\r\n            </div>\r\n        ):(<p>instructor not give any task yet .</p>)\r\n        const showAllImage=(this.state.photos.length)?(\r\n            this.state.photos.map(el=>{\r\n                return(\r\n                    <div key={el.id} style={{ }}>\r\n                        <Link to={'/student/'+el.id }>\r\n                         <img src={el.img} width='200' height='200' alt='' className='card' style={{ border:\"2px solid blue\"}}/>\r\n                         <p>{el.id} </p>\r\n                         </Link>\r\n                    </div>\r\n                )\r\n            })\r\n          \r\n        ):(<p>no photos yet</p>)\r\n      //  this.state.photos.push(img);\r\n        return (\r\n            <div className='container'>\r\n               { studentSection }\r\n               { showAllImage }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Student\r\n","import React, { Component } from 'react'\r\nimport  { useState } from 'react';\r\nimport Camera from 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\nimport ImagePreview from './preview/ImagePreview'; // source code : ./src/demo/AppWithImagePreview/ImagePreview\r\nimport Student from './Student'\r\n\r\nclass Image extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        file: '',\r\n        imagePreviewUrl: '',\r\n        deviceImageContent:\"\"\r\n      };\r\n      this._handleImageChange = this._handleImageChange.bind(this);\r\n      this._handleSubmit = this._handleSubmit.bind(this);\r\n      this._handleChange= this._handleChange.bind(this);\r\n      this._removeDeviceImageDiv=this._removeDeviceImageDiv.bind(this);\r\n    }\r\n    _handleSubmit(e) {\r\n      e.preventDefault();\r\n      // TODO: do something with -> this.state.file\r\n    }\r\n  \r\n    _handleImageChange(e) {\r\n      e.preventDefault();\r\n  \r\n      let reader = new FileReader();\r\n      let file = e.target.files[0];\r\n  \r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file: file,\r\n          imagePreviewUrl: reader.result\r\n        });\r\n      }\r\n  \r\n      reader.readAsDataURL(file)\r\n    }\r\n   _handleChange(e){\r\n     this.setState({ [e.target.id]:e.target.value })\r\n   }\r\n  _removeDeviceImageDiv=(e)=>{\r\n    document.querySelector('.info-div').style.display='none';\r\n  }\r\n    render() {\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        $imagePreview =<div>\r\n                           <img src={imagePreviewUrl} width='500'  alt='' height='400' style={{ border:\"2px solid blue\",\r\n                                       padding:\".5rem 1rem\"}} />);\r\n                            <div className='detailPhotoUpload' style={{ display:\"none123\"}}>\r\n                                  <h2>About Your Image</h2>\r\n                                  <h3> { this.state.deviceImageContent }</h3>\r\n                                       <div className='container info-div' style={{ marginTop:\"2rem\"}}>\r\n                                             <input type='text' id='deviceImageContent' onChange={ this._handleChange } />\r\n                                             <button type='button' className='btn btn-primary' onClick={ this._removeDeviceImageDiv}>Add info</button>\r\n                                       </div>\r\n                            </div>\r\n                        </div>\r\n                            \r\n        localStorage.setItem('img',imagePreviewUrl)\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <form onSubmit={this._handleSubmit}>\r\n            <input type=\"file\" onChange={this._handleImageChange} />\r\n            {/* <button type=\"submit\" onClick={this._handleSubmit}>Upload Image</button> */}\r\n          </form>\r\n          <div className='' style={{ marginTop:\"2rem\",textAlign:\"center\"}}>\r\n               {$imagePreview}\r\n          </div>\r\n         \r\n        </div>\r\n      )\r\n    }\r\n  \r\n  }\r\n\r\n  function Camera1 (props) {\r\n    const [dataUri, setDataUri] = useState('');\r\n    const [content, setContent] = useState('');\r\n   \r\n    function handleTakePhotoAnimationDone (dataUri) {\r\n      console.log('takePhoto');\r\n      setDataUri(dataUri);\r\n      localStorage.setItem('img',dataUri);\r\n    }\r\n    function remove(){\r\n        document.querySelector('.info-div').style.display='none';\r\n    }\r\n    const isFullscreen = false;\r\n    return (\r\n      <div>\r\n        {\r\n          (dataUri)\r\n            ? <div><ImagePreview dataUri={dataUri}\r\n              isFullscreen={isFullscreen} content={content}\r\n            />\r\n            <div className='container info-div' style={{ marginTop:\"2rem\"}}>\r\n                <input type='text' value={content} onChange={e=> setContent(e.target.value) } />\r\n                <button type='button' className='btn btn-primary' onClick={remove}>Add info</button>\r\n            </div>\r\n            </div>\r\n            : <Camera onTakePhotoAnimationDone = {handleTakePhotoAnimationDone}\r\n              isFullscreen={isFullscreen}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n   \r\n\r\n class Home extends Component {\r\n     state={\r\n         flagCamera:false,\r\n         flagPhone:false,\r\n         id:null,\r\n         content:'',\r\n         studentFlag:false\r\n     }\r\n     handleCamera=(e)=>{\r\n        this.setState({   flagCamera:true   })\r\n        document.getElementById('image-id').style.display='none';\r\n     }\r\n     handlePhotoDevice=(e)=>{\r\n             this.setState({ flagPhone:true })\r\n             document.getElementById('camuni').style.display='none';\r\n             document.querySelector('.image-upload-div').classList.add('col-lg-12')\r\n     }\r\n\r\n     handleStudentClick=(e)=>{\r\n        this.setState({ studentFlag:true })\r\n     }\r\n    render() {\r\n      const show=  (this.state.flagCamera)?(\r\n       <Camera1 />\r\n    ):(null)\r\n    const show1=(this.state.flagPhone)?(<Image />):(null)\r\n    \r\n    const student=(this.state.studentFlag)?(<Student />):<p></p>\r\n\r\n        return (\r\n            <div className='container'>\r\n                  <h4 style={{ fontSize:\"3rem\",textAlign:\"center\",marginBottom:\"1rem\"}}>TrueExam</h4>\r\n                <div className='row' style={{ marginTop:\"3rem\"}}>\r\n                    <div className='col-lg-6 col-md-6 col-sm-6 camera-div' >\r\n                        <button type='button' id='camuni' className='btn btn-primary' onClick={ this.handleCamera }>Take photo with camera</button>\r\n                    </div>\r\n                    <div className='col-lg- col-md-6 col-sm-6 image-upload-div' id='image-id'>\r\n                        <button type='button' className='btn btn-primary' onClick={ this.handlePhotoDevice }>Take photo with device</button>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-lg-12 col-md-12 col-sm-12'>\r\n                          { show }\r\n                    </div>\r\n                    <div className='col-lg-12  col-md-12 col-sm-12'>\r\n                        { show1 }\r\n                    </div>\r\n                </div>\r\n               <div className='container' style={{marginTop:\"3rem\"}}> \r\n                  <button type='button' className='btn btn-primary' onClick={this.handleStudentClick} >\r\n                              student section</button>\r\n                    {\r\n                       student\r\n                    }\r\n               </div>\r\n               \r\n         \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\n\r\nclass Single extends Component { \r\n    state={\r\n        id:null,\r\n        number:null,\r\n        img:null\r\n    }\r\n    componentDidMount(){\r\n       // console.log(this.props.match.params.id)\r\n       this.setState({ id:Number(this.props.match.params.id)});\r\n        \r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleAddButton=(e)=>{\r\n      document.querySelector('.points-div').style.display='none';\r\n     const img1= document.querySelector('img').getAttribute('src');\r\n     this.setState({ img:img1 })\r\n     \r\n    }\r\n    render() {\r\n        const photos=JSON.parse(localStorage.getItem('photos'));\r\n        //console.log(typeof( photos[0].id),typeof(Number(this.state.id)))\r\n        const imageUrl=photos.filter(el=>{\r\n                if( this.state.id===el.id){\r\n                    return el.img\r\n                }else{ return null }\r\n        })\r\n        const showmarks=this.state.number?(\r\n            <p>The marks of student is {this.state.number }</p>\r\n        ):(<p></p>)\r\n       console.log(typeof(imageUrl))\r\n       const img=imageUrl.map(el=> el.img);\r\n       localStorage.setItem('modifyStudent',JSON.stringify(this.state))\r\n      // console.log(img)\r\n        return (\r\n            <div style={{ marginTop:\"3rem\",textAlign:\"center\",fontSize:\"1rem\",color:\"blue\"}}>\r\n               <h3>student with id : { this.state.id }</h3> \r\n               <div className='container'>\r\n                   <img src={ img } alt='' width='400' height='400' />\r\n                   <div style={{ padding:\"2rem \"}} className='points-div'>\r\n                       <input type='number' onChange={this.handleChange} id='number' />\r\n                       <button type='button' className='btn btn-primary ' onClick={ this.handleAddButton }>Add marks</button>\r\n                   </div>\r\n                   <p>{ showmarks }</p>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Single;\r\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport { BrowserRouter ,Route  } from 'react-router-dom'\nimport Single from './components/SingleStudent';\n//import Student from './components/Student';\n\nfunction App() {\n  return (\n    <div>\n    <BrowserRouter >\n       {/* <Home /> */}\n      <Route  exact path='/true-exam' component={Home} />\n      <Route  path='/student/:id'  component={Single}/>\n    </BrowserRouter>\n    \n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}